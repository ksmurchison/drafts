<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../rfc2629.xslt"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd'
[
<!ENTITY rfc2119 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml'>
<!ENTITY rfc5234 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5234.xml'>
<!ENTITY rfc4791 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4791.xml'>
<!ENTITY rfc5545 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5545.xml'>
<!ENTITY rfc5546 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5546.xml'>
<!ENTITY rfc5789 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5789.xml'>
<!ENTITY rfc7953 PUBLIC '' 'http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7953.xml'>
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc toc="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc tocdepth="3"?>
<?rfc strict="yes"?>
<!-- updates='5545'-->
<rfc category="std" ipr='trust200902'
     docName='draft-daboo-icalendar-vpatch-00'>
  <front>
    <title abbrev="iCalendar VPATCH Component">The iCalendar VPATCH Component</title>
    <author initials="C." surname="Daboo" fullname="Cyrus Daboo">
      <organization abbrev="Apple Inc.">Apple Inc.</organization>
      <address>
        <postal>
          <street>1 Infinite Loop</street>
          <city>Cupertino</city>
          <region>CA</region>
          <code>95014</code>
          <country>USA</country>
        </postal>
        <email>cyrus@daboo.name</email>
        <uri>http://www.apple.com/</uri>
      </address>
    </author>
    <author initials="K." surname="Murchison" fullname="Kenneth Murchison">
      <organization>Carnegie Mellon University</organization>
      <address>
        <postal>
          <street>5000 Forbes Avenue</street>
          <city>Pittsburgh</city> <region>PA</region>
          <code>15213</code> <country>USA</country>
        </postal>
        <!--<phone>+1 412 268 1982</phone>-->
        <email>murch@andrew.cmu.edu</email>
      </address>
    </author>
    <date />
    <area>Applications</area>
    <keyword>calendaring</keyword>
    <keyword>iCalendar</keyword>
    <keyword>iTIP</keyword>
    <keyword>CalDAV</keyword>
    <keyword>HTTP</keyword>
    <keyword>PATCH</keyword>
    <abstract>
      <t>This document defines a new iCalendar (RFC 5545) component
      that allows small "patches" to be applied to large iCalendar data
      objects, to allow for efficient data updates. It also describes
      how this new component can be used with the CalDAV calendar data
      access protocol (RFC 4791).</t>
    </abstract>

    <note title='Open Issues'>
      <t>
        <list style="symbols">
          <t>Does this spec update RFC 5545?  It doesn't touch
          existing elements, so perhaps not.</t>

          <t>Do we want to use "RID=M"to specify "master"
          component (no RECURRENCE-ID) or simply use "RID="?</t>

          <t>Do we have any content for <xref target="defaults"/>?</t>

          <t>Do we need/want to handle individual values in multi-valued
          properties/parameters?  Currently these are handled by
          CREATE and DELETE only.</t>

          <t>Do we need/want a parameter on TARGET to state what should
          happen if nothing matches, e.g. if-none-match = (create /
          ignore / fail) ?</t>

          <t>Do we allow DELETE on TARGET:/VCALENDAR to delete a
          resource from a CalDAV server as a side-effect?  Currently,
          it would result in an empty resource,</t>
        </list>
      </t>
    </note>
  </front>

  <middle>
    <section title='Introduction'>
      <t>The <xref target='RFC5545'>iCalendar</xref> data format is in
      widespread use to represent calendar data. iCalendar data can
      grow large (e.g., a family calendar containing events over a
      period of several years). Updating large resources over the
      network currently requires the entire data to be sent - even if
      the change itself is minor.</t>

      <t>This specification defines a new iCalendar component that can
      be used to "patch" (incrementally update) iCalendar data in an
      efficient manner. When combined with the HTTP <xref
      target="RFC5789">PATCH method</xref>, it can be used to update
      calendar object resources on a <xref
      target="RFC4791">CalDAV</xref> server, or any resource on an
      HTTP server that contains iCalendar data.</t>
    </section>

    <section title='Conventions Used in This Document'>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
      NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
      "MAY", and "OPTIONAL" in this document are to be interpreted as
      described in <xref target='RFC2119' />.</t> 

      <t>The notation used in this memo is the ABNF notation of <xref
      target='RFC5234' /> as used by <xref
      target='RFC5545'>iCalendar</xref>. Any syntax elements shown
      below that are not explicitly defined in this specification come
      from <xref target='RFC5545'>iCalendar</xref> and
      <xref target='RFC7953'>Calendar Availability</xref>.</t>
<!--
      <xref target='RFC5546'>iTIP</xref>, and
      <xref target='RFC4791'>CalDAV</xref>.</t>

      <t>When XML element types in the namespaces "DAV:" and
      "urn:ietf:params:xml:ns:caldav" are referenced in this document
      outside of the context of an XML fragment, the string "DAV:" and
      "CALDAV:" will be prefixed to the element type names
      respectively.</t>
-->
    </section>

    <section title="Overview">
      <t> The basic design of the patch format is a single "VPATCH"
      component containing a series of sub-components, each specifying
      an action to be performed, one or more targets, and
      optionally some data.</t>

      <t>The name of each sub-component indicates the action to
      be performed (e.g., adding a new component or property,
      updating an existing element, removing an existing element).
      Each of the actions specified by the sub-components MUST be
      executed sequentially.
      If an action results in violation of any constraints on the
      overall iCalendar object (e.g., adding a "VALARM" component
      directly within a "VCALENDAR" component, adding a second
      "DTSTART" property, when only one is allowed), then the action
      MUST fail.  A failure executing any action MUST result in the
      entire patch operation being cancelled, with the iCalendar
      object being targeted left in its original state.</t>

      <t>The body of each sub-component contains:
      <list style="symbols">
        <t>One or more "TARGET" properties to identify the iCalendar
        elements to which the patch should be applied.  Unless
        otherwise specified, if a "TARGET" property does not match any
        elements in the target iCalendar object, then the action MUST
        succeed without any change being applied to the target
        iCalendar object.  Note that a  single "TARGET" property may
        match multiple iCalendar elements (e.g., a patch can update
        the "SUMMARY" iCalendar property in all "VEVENT" iCalendar
        components in an iCalendar object to the same new value).</t>

        <t>Any data needed to apply the patch (e.g., when adding a new
        iCalendar component, the data will be the entire new iCalendar
        component; when updating an iCalendar property, the data
        will be the new property; when removing an element, the
        data will be absent).</t>
      </list>
      </t>

      <t>The "VPATCH" component also contains an optional
      "PATCH-VERSION" property to allow future extensions to the
      format to be recognized. This document only defines version
      number "1".  The "PATCH-VERSION" property only needs to be present
      if the version number is greater than "1".</t>  

      <t>The table below shows all the allowed combination of action
      sub-components, targets, and data items.  Subsequent sections
      describe all of these in more detail.</t>

      <texttable>
        <ttcol>Component</ttcol>
          <ttcol>TARGET Value</ttcol>
          <ttcol>Data</ttcol>
          <ttcol>Description</ttcol>
          <c>CREATE</c>
          <c>Component</c>
          <c>Properties and/or Components</c>
          <c>Add the supplied properties and components to the
          components identified by the target.</c>
          <c>CREATE</c>
          <c>Property</c>
          <c>SETPARAMETER Properties</c>
          <c>Add the supplied parameters to the properties identified
          by the target.</c>
          <c />
          <c />
          <c />
          <c />
          <c>UPDATE</c>
          <c>Component</c>
          <c>Components</c>
          <c>Replace the components identified by the target, with the
          supplied components.</c>
          <c>UPDATE</c>
          <c>Property (with name)</c>
          <c>Property</c>
          <c>Add or replace the property identified by the target,
          with the supplied property.</c>
          <c>UPDATE</c>
          <c>Property (no name)</c>
          <c>Properties</c>
          <c>Add or replace properties in the component identified by
          the target with the supplied properties.</c>
          <c>UPDATE</c>
          <c>Parameter (no name)</c>
          <c>SETPARAMETER Properties</c>
          <c>Add or replace the parameters in the properties
          identified by the target, with the supplied parameters.</c>
          <c />
          <c />
          <c />
          <c />
          <c>DELETE</c>
          <c>Component</c>
          <c></c>
          <c>Delete the components identified by the target.</c>
          <c>DELETE</c>
          <c>Property</c>
          <c></c>
          <c>Delete the properties identified by the target.</c>
          <c>DELETE</c>
          <c>Parameter (no value)</c>
          <c></c>
          <c>Delete the parameters identified by the target.</c>
          <c>DELETE</c>
          <c>Parameter (with value)</c>
          <c></c>
          <c>Delete the specified value from the multi-valued parameter
          identified by the target.</c>
      </texttable>
    </section>

    <section title='iCalendar Extensions' anchor="extensions">
      <t>This specification adds a new "VPATCH" calendar component to
      iCalendar.  The "VPATCH" component is itself a container for
      new "CREATE", "UPDATE", and "DELETE" subcomponents.</t>

      <section title="VPATCH Component" anchor="vpatch">
        <t>
          <list style="hanging">
            <t hangText="Component Name:">
              VPATCH
            </t>
            <t hangText="Purpose:">
              Provide a grouping of component properties and sub-components
              that describe the patch actions to be performed.
            </t>
            <t hangText="Format Definition:">
              A "VPATCH" calendar component is defined by the
              following notation:
              <figure><artwork name="abnf">
patchc      = "BEGIN" ":" "VPATCH" CRLF
                patchprop action
              "END" ":" "VPATCH" CRLF

patchprop   = *(
                 ;
                 ; The following are REQUIRED,
                 ; but MUST NOT occur more than once.
                 ;
                 dtstamp / uid /
                 ;
                 ;
                 ; The following are OPTIONAL,
                 ; but MUST NOT occur more than once.
                 ;
                 patch-version / patch-order /
                 ;
                 ; The following are OPTIONAL,
                 ; and MAY occur more than once.
                 ;
                 other-prop
                 ;
               )

other-prop  = ( iana-prop / x-prop )

action      = 1*( createc / updatec / deletec / iana-comp / x-comp )
              </artwork></figure>
            </t>
            <t hangText="Description:">
              This component serves as a container for a series of
              sub-components, each specifying a certain patch action
              to be performed on an iCalendar object.
            </t>
          </list>
        </t>

        <section title="CREATE Component" anchor="create">
          <t>
            <list style="hanging">
              <t hangText="Component Name:">
                CREATE
              </t>
              <t hangText="Purpose:">
                Provide a set of new properties and sub-components to be
                added to the iCalendar object.
              </t>
              <t hangText="Format Definition:">
                An "CREATE" calendar component is defined by the following
                notation:
                <figure><artwork name="abnf">
createc     = "BEGIN" ":" "CREATE" CRLF
                createprop subcomp
              "END" ":" "CREATE" CRLF

createprop  = *(
                 ;
                 ; The following is REQUIRED,
                 ; but MUST NOT occur more than once.
                 ;
                 target /
                 ;
                 ; The following is REQUIRED if 'target' includes a
                 ; 'prop-segment' in its 'targetpath', and MAY occur
                 ; more than once; otherwise it MUST NOT occur.
                 ;
                 setparam /
                 ;
                 ; The following are OPTIONAL if 'target' does not
                 ; include a 'prop-segment' in its 'targetpath',
                 ; and MAY occur more than once; otherwise they MUST
                 ; NOT occur.
                 ;
                 other-prop
                 ;
               )
              
subcomp     = *(
                 ;
                 ; The following are OPTIONAL,
                 ; and MAY occur more than once,
                 ; if and only if 'target' does not include a
                 ; 'prop-segment' in its 'targetpath';
                 ; otherwise they MUST NOT occur.
                 ;
                 eventc / todoc / journalc / freebusyc /
                 timezonec / alarmc / standard / daylight /
                 availabilityc / availablec /
                 iana-comp / x-comp
                 ;
              )
                </artwork></figure>
              </t>
              <t hangText="Description:">
                This component provides a mechanism by which elements
                can be added to an iCalendar object.  The TARGET
                property MUST identify either iCalendar components or
                properties.  The TARGET property is processed as
                follows:

                <list style="symbols">
                  <t>If the TARGET property matches one or more
                  iCalendar properties, then the remaining properties
                  MUST only be SETPARAMETER properties.  The iCalendar
                  parameters of the SETPARAMETER properties are then 
                  added to the targeted iCalendar properties.  If
                  a parameter being added is already present on the
                  targeted iCalendar property, and that parameter can
                  be multi-valued, then the server MUST  add the new 
                  value(s) to the existing parameter; otherwise the
                  server MUST fail the patch action.  Note that to
                  replace an existing parameter an "update" action
                  MUST be used.</t>

                  <t>Else, if the TARGET property matches one or more
                  iCalendar components, then the remaining properties
                  and/or components are added as child elements of the
                  targeted iCalendar components.  If a property being
                  added is already present on the targeted iCalendar
                  component, and that property can be multi-valued,
                  then the server MAY add the new value(s) to the
                  existing property.  Note that to replace an existing
                  property an "update" action MUST be used.</t>
                </list>

                If there is no iCalendar element that matches the
                TARGET property in the iCalendar object, this action
                MUST succeed without any changes being applied to the
                target iCalendar object.
              </t>
            </list>
          </t>
        </section> <!-- CREATE -->

        <section title="UPDATE Component" anchor="update">
          <t>
            <list style="hanging">
              <t hangText="Component Name:">
                UPDATE
              </t>
              <t hangText="Purpose:">
                Provide a set components, properties or parameters to be
                updated in the iCalendar object.
              </t>
              <t hangText="Format Definition:">
                An "UPDATE" calendar component is defined by the
                following notation:
                <figure><artwork name="abnf">
updatec     = "BEGIN" ":" "UPDATE" CRLF
                updateprop subcomp
              "END" ":" "UPDATE" CRLF

updateprop  = *(
                 ;
                 ; The following is REQUIRED,
                 ; but MUST NOT occur more than once.
                 ;
                 target /
                 ;
                 ; If 'target' includes a 'prop-segment' in its 'targetpath',
                 ; then one of the following is REQUIRED;
                 ; otherwise, they MUST NOT occur.
                 ; If 'prop-segment' includes a 'param-segment', then
                 ; 'setparam' is REQUIRED, and MAY occur more than once;
                 ; otherwise, 'other-param' is REQUIRED,
                 ; and MUST NOT occur more than once
                 ; if 'prop-segment' includes a 'name'.
                 ;
                 setparam / other-prop
                 ;
               )
                </artwork></figure>
              </t>
              <t hangText="Description:">
                This component provides a mechanism by which elements
                can be updated in an iCalendar object.  The TARGET
                property is processed as follows:

                <list style="symbols">
                  <t>If the TARGET property contains a parameter
                  segment, then the remaining properties MUST only be
                  SETPARAMETER properties.  The iCalendar parameters
                  of the SETPARAMETER properties are added to or
                  replace the equivalent parameters on the targeted
                  iCalendar properties.  Note that any parameter name
                  and match value contained in the TARGET property is
                  ignored and SHOULD NOT be specified; to replace a
                  single value of a multi-valued parameter, a DELETE
                  action followed by a CREATE action MUST be used.</t>

                  <t>Else, if the TARGET property contains a property
                  segment, then:

                  <list style="symbols">
                    <t>If the property segment does not include a name
                    (i.e., the TARGET path ends with the single "#"
                    character after the component segment), then the
                    remaining properties contained in the UPDATE
                    component are added to or replace the equivalent
                    properties in the targeted iCalendar component.</t> 

                    <t>Otherwise, the equivalent property contained in
                    the UPDATE component is added to or replaces the
                    matching properties in the targeted iCalendar
                    component.  Note that a property match value can
                    not be used to target and update a single value in
                    a multi-valued property; to replace a single value
                    of a multi-valued property, a DELETE action
                    followed by a CREATE action MUST be used.</t>
                  </list>
                  </t>

                  <t>Else, if the TARGET property matches one or more
                  iCalendar components, then the targeted
                  iCalendar components are replaced with those
                  contained in the UPDATE component.</t>
                </list>

                If there is no iCalendar element that matches the
                TARGET property in the iCalendar object, this action
                MUST succeed without any changes being applied to the
                target iCalendar object.
              </t>
            </list>
          </t>
        </section> <!-- UPDATE -->

        <section title="DELETE Component" anchor="delete">
          <t>
            <list style="hanging">
              <t hangText="Component Name:">
                DELETE
              </t>
              <t hangText="Purpose:">
                Provide a set of components, properties, and parameters
                to be removed from the iCalendar object. 
              </t>
              <t hangText="Format Definition:">
                A "DELETE" calendar component is defined by the
                following notation:
                <figure><artwork name="abnf">
deletec     = "BEGIN" ":" "DELETE" CRLF
                deleteprop
              "END" ":" "DELETE" CRLF

deleteprop  = *(
                 ;
                 ; The following is REQUIRED
                 ; and MAY occur more than once.
                 ;
                 target
                 ;
               )
                </artwork></figure>
              </t>
              <t hangText="Description:">
                This component provides a mechanism by which elements
                can be removed from an iCalendar object.  This component
                MAY contain more than one TARGET property.  Unless
                amended by an extension to this memo, all other
                properties are ignored.  Each instance of the TARGET
                property is processed as follows:

                <list style="symbols">
                  <t>If the TARGET property matches one of the values of
                  a multi-valued parameter on an iCalendar
                  property, then this value is removed from the
                  targeted parameter.  Note that if the value being
                  removed is the sole value of the targeted parameter,
                  then the entire parameter MUST be removed from the
                  iCalendar property.</t>

                  <t>Else, if the TARGET property matches one or more
                  parameters on an iCalendar property, then
                  the targeted parameters are removed from the iCalendar
                  property.</t>

                  <t>Else, if the TARGET property matches one of the
                  values of a multi-valued iCalendar property, then
                  this value is removed from the targeted property.
                  Note that if the value being removed is the sole
                  value of the targeted property, then the entire
                  property MUST be removed from the iCalendar
                  object.</t>

                  <t>Else, if the TARGET property matches one or more
                  iCalendar properties, then the targeted
                  properties are removed from the iCalendar object.</t> 

                  <t>Else, if the TARGET property matches one or more
                  iCalendar components, then the targeted
                  components are removed from the iCalendar object.</t> 
                </list>

                If there is no iCalendar element that matches the
                TARGET property in the iCalendar object, this action
                MUST succeed without any changes being applied to the
                target iCalendar object.
              </t>
            </list>
          </t>
        </section> <!-- DELETE -->
      </section> <!-- VPATCH -->

      <section title="VPATCH Properties" anchor="vpatchprops">
        <t>The VPATCH properties are attributes that apply to the
        VPATCH component, as a whole.  These properties do not appear
        within VPATCH sub-components.  They SHOULD be
        specified after the "BEGIN:VPATCH" delimiter string and prior
        to any sub-component.</t>

        <section title="PATCH-VERSION Property" anchor="patchversion">
          <t>
            <list style="hanging">
              <t hangText="Property Name:">
                PATCH-VERSION
              </t>
              <t hangText="Purpose:">
                This property specifies the identifier corresponding to the
                highest version number of the VPATCH specification
                that is required in order to interpret the VPATCH
                component.
              </t>
              <t hangText="Value Type:">
                TEXT
              </t>
              <t hangText="Property Parameters:">
                IANA and nonstandard property parameters can be
                specified on this property.
              </t>
              <t hangText="Conformance:">
                This property can be specified once in an VPATCH
                component.  The default value is "1". This property
                MUST be specified if its value is other than "1".
                Otherwise, this property is OPTIONAL.
              </t>
              <t hangText="Description:">
                A value of "1" corresponds to this memo.
              </t>
              <t hangText="Format Definition:">
                This property is defined by the following notation:
                <figure><artwork name="abnf">
patch-version  = "PATCH-VERSION pverparam ":" pvervalue CRLF

pverparam      = *(";" other-param)

pvervalue      = "1"         ; This memo
                 / pmaxver

pmaxver        = &lt;A IANA-registered VPATCH version identifier&gt;
                 ;Maximum VPATCH version needed to parse the VPATCH component.
                </artwork></figure>
              </t>
              <t hangText="Example:">
                The following is an example of this property:
                <figure><artwork name="example">
PATCH-VERSION:1
                </artwork></figure>
              </t>
            </list>
          </t>
        </section>

        <section title="PATCH-ORDER Property" anchor="patchorder">
          <t>
            <list style="hanging">
              <t hangText="Property Name:">
                PATCH-ORDER
              </t>
              <t hangText="Purpose:">
                This property specifies the ordering of the associated
                VPATCH component.
              </t>
              <t hangText="Value Type:">
                INTEGER
              </t>
              <t hangText="Property Parameters:">
                IANA and nonstandard property parameters can be
                specified on this property.
              </t>
              <t hangText="Conformance:">
                This property can be specified once in a VPATCH
                component.
              </t>
              <t hangText="Description:">
                This property is OPTIONAL and is used to indicate the
                relative ordering of the associated VPATCH component
                amongst its siblings.  Its value MUST be an integer
                greater than or equal to 1 that quantifies the order.
                Lower values correspond to a higher level of ordering,
                with 1 being the highest.

                When the property is absent, the default MUST be to
                interpret the VPATCH instance as being at the lowest
                level of ordering.

                Note that the value of this property is to be
                interpreted only in relation to values assigned to
                other VPATCH instances in the same iCalendar
                object.  A given value, or the absence of a value,
                MUST NOT be interpreted on its own.
              </t>
              <t hangText="Format Definition:">
                This property is defined by the following notation:
                <figure><artwork name="abnf">
patch-order  = "PATCH-ORDER porderparam ":" integer CRLF

porderparam  = *(";" other-param)
                </artwork></figure>
              </t>
              <t hangText="Example:">
                The following is an example of this property:
                <figure><artwork name="example">
PATCH-ORDER:1
                </artwork></figure>
              </t>
            </list>
          </t>
        </section>
      </section>

      <section title='VPATCH Sub-component Properties' anchor='actionprops'>
        <t>The following properties can appear within VPATCH
        sub-components, as specified by each sub-component property
        definition.</t>

        <section title="TARGET Property" anchor="targetprop">
          <t>
            <list style="hanging">
              <t hangText="Property Name:">
                TARGET
              </t>
              <t hangText="Purpose:">
                This property specifies a path targeting one or more
                components, properties, or parameters within an
                iCalendar object.
              </t>
              <t hangText="Value Type:">
                TEXT
              </t>
              <t hangText="Property Parameters:">
                IANA and nonstandard property parameters can be
                specified on this property.
              </t>
              <t hangText="Conformance:">
                This property MUST be specified within any VPATCH
                sub-component.
              </t>
              <t hangText="Description:">
                This property is used to match iCalendar elements
                that the patch operation will be applied to.  The
                property value ("targetpath") is a list of "segments"
                (separated by the "/", "#" or ";" characters) that
                matches an iCalendar element in the iCalendar object
                model hierarchy.  Each component or property segment
                can include an optional match term that narrows the
                set of matching elements. The property or parameter
                segments are empty when creating properties or
                parameters, respectively.<vspace />

                <vspace />The "targetpath" consists of one or more
                component segments (which always have a "/" prefix),
                optionally followed by an property segment (which
                always has a "#" prefix"), which itself is optionally
                followed by a parameter segment (which always has a
                ";" prefix).<vspace />

                <vspace />The "targetpath" always starts with a
                "/VCALENDAR" component segment since an iCalendar
                object is always a single "VCALENDAR"
                component.<vspace />

                <vspace />To target a component inside of another
                component, a component segment is appended to the path
                (e.g., "/VCALENDAR/VEVENT" targets "VEVENT" components
                inside the "VCALENDAR" component. Component segments
                can include an optional match item.  When present,
                this allows targeting of components that match a
                specific "UID" property value, and/or ones that match
                a specific "RECURRENCE-ID" value (or lack of
                "RECURRENCE-ID" property if the value of the match is
                "M").<vspace />

                <vspace />To target a property inside of a component,
                a property segment is appended to the component
                segment at the end of the path (e.g.,
                "/VCALENDAR#VERSION" targets a "VERSION" property
                inside the "VCALENDAR" component). When creating a new
                property inside of a component, the property segment
                name is empty (e.g., "/VCALENDAR/VEVENT#" would allow
                creation of new properties inside the targeted
                "VEVENT" components). The property segment can include
                an optional match item. When present, this allows
                targeting of properties whose value matches or does
                not match a specific value.<vspace />

                <vspace />To target a parameter on a property, a
                parameter segment is appended to the property segment
                at the end of the path (e.g.,
                "/VCALENDAR/VEVENT#ATTENDEE;PARTSTAT" targets the
                "PARTSTAT" parameter on an "ATTENDEE" property, inside
                a "VEVENT" component, inside the "VCALENDAR"
                component). When creating a new parameter on a
                property, the parameter segment name is empty (e.g.,
                "/VCALENDAR/VEVENT#ATTENDEE;" would allow creation of
                new parameters on the targeted "ATTENDEE"
                properties).<vspace />

                <vspace />Values in match items MUST use URL-style
                percent (%) encoding of the characters "/", "#", ";" and
                "]". This allows the 'targetpath' to be quickly split into
                segments by breaking apart the text on the relevant
                delimiter characters.
              </t>
              <t hangText="Format Definition:">
                This property is defined by the following notation:
                <figure><artwork name="abnf">
target          = "TARGET *(";" other-param) ":" targetpath CRLF

targetpath       = 1*comp-segment [prop-segment [param-segment]]

comp-segment     = "/" name comp-match
comp-match       = [uid-match] [rid-match]
uid-match        = "[UID=" text "]"
rid-match        = "[RID=" ("M" / ridval) "]"
  ; "M" matches "master" component

prop-segment     = "#" [name [prop-match]]
  ; name not present when updating multiple properties
prop-match       = "[" (prop-equal / prop-not-equal) "]"

prop-equal       = "=" value
prop-not-equal   = "!" value

param-segment    = ";" [param-name [param-match]]
  ; param-name not present when updating parameters
param-match      = "[" (param-equal / param-not-equal) "]"

param-equal      = "=" param-value
param-not-equal  = "!" param-value
                </artwork></figure>
              </t>
              <t hangText="Examples:">
                <vspace />Targeting components:
                <list style="hanging">
                  <t hangText="TARGET:/VCALENDAR">
                  <vspace />Targets the "VCALENDAR" component in the
                  iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT">
                  <vspace />Targets all "VEVENT" components in the
                  "VCALENDAR" component in the iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT[UID=1234]">
                  <vspace />Targets any "VEVENT" components that
                  have a "UID" property value exactly equal to
                  "1234", in the "VCALENDAR" component in the
                  iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT[UID=1234%2F4567][RID=M]">
                  <vspace />Targets any "VEVENT" components that have
                  a "UID" property value exactly equal to "1234/4567"
                  and do not have a "RECURRENCE-ID" property, in the
                  "VCALENDAR" component in the iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT[UID=1234][RID=20150902T223000Z]">
                  <vspace />Targets any "VEVENT" components that have
                  a "UID" property value exactly equal to "1234" and
                  have a "RECURRENCE-ID" property whose UTC value is
                  "20150902T223000Z", in the "VCALENDAR" component in
                  the iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT/VALARM">
                  <vspace />Targets all "VALARM" components in all
                  "VEVENT" components in the "VCALENDAR" component
                  in the iCalendar object.</t>
                </list>

                <vspace />Targeting properties:
                <list style="hanging">
                  <t hangText="TARGET:/VCALENDAR/PRODID">
                  <vspace />Targets the "PRODID" property in the
                  "VCALENDAR" component in the iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT#STATUS">
                  <vspace />Targets all "STATUS" properties in all "VEVENT"
                  components in the "VCALENDAR" component in the
                  iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT[UID=1234]#STATUS">
                  <vspace />Targets all "STATUS" properties in any
                  "VEVENT" components that have a "UID" property value
                  exactly equal to "1234", in the "VCALENDAR"
                  component in the iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com]">
                  <vspace />Targets any "ATTENDEE" properties that
                  have the value "mailto:cyrus@example.com" in all
                  "VEVENT" components, in the "VCALENDAR" component in
                  the iCalendar object.</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT#ATTENDEE[!mailto:cyrus@example.com]">
                  <vspace />Targets any "ATTENDEE" properties that do
                  not have the value "mailto:cyrus@example.com" in all
                  "VEVENT" components, in the "VCALENDAR" component in
                  the iCalendar object.</t>
                  
                  <t hangText="TARGET:/VCALENDAR/VEVENT#EXDATE[=20160828]">
                  <vspace />Targets the value "20160828" in the
                  multi-valued "EXDATE" property in all "VEVENT"
                  components, in the "VCALENDAR" component in the
                  iCalendar object.</t>
                  
                  <t hangText="TARGET:/VCALENDAR/VEVENT#">
                  <vspace />Indicates that properties are to be
                  updated in all "VEVENT" components in the
                  "VCALENDAR" component in the iCalendar object.</t>
                </list>

                Targeting parameters:
                <list style="hanging">
                  <t hangText="TARGET:/VCALENDAR/VEVENT#ATTENDEE;PARTSTAT">
                    <vspace />Targets the "PARTSTAT" parameter on all
                    "ATTENDEE" properties in all "VEVENT" components in
                    the "VCALENDAR" component in the iCalendar
                  object</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT">
                    <vspace />Targets the "PARTSTAT" parameter on any
                    "ATTENDEE" properties that have the value
                    "mailto:cyrus@example.com" in all  "VEVENT"
                    components, in the "VCALENDAR" component in the
                  iCalendar object</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT#ATTENDEE;MEMBER[=mailto:calext@example.org]">
                    <vspace />Targets the value
                    "mailto:calext@example.com" of the multi-valued
                    "MEMBER" parameter on all "ATTENDEE" properties in
                    all "VEVENT" components in the "VCALENDAR"
                    component in the iCalendar object</t>

                  <t hangText="TARGET:/VCALENDAR/VEVENT#ATTENDEE;">
                    <vspace />Indicates that parameters are to be
                    updated on all "ATTENDEE" properties in all
                    "VEVENT" components in the "VCALENDAR" component
                    in the iCalendar object</t>
                </list>
              </t>
            </list>
          </t>
        </section>

        <section title="SETPARAMETER Property" anchor="setparam">
          <t>
            <list style="hanging">
              <t hangText="Property Name:">
                SETPARAMETER
              </t>
              <t hangText="Purpose:">
                This property specifies a set of parameters to be
                set on the targeted property.
              </t>
              <t hangText="Value Type:">
                TEXT
              </t>
              <t hangText="Property Parameters:">
                IANA and nonstandard property parameters can be
                specified on this property.
              </t>
              <t hangText="Conformance:">
                This property can be specified within an "UPDATE"
                sub-component.
              </t>
              <t hangText="Description:">
                This property specifies parameters to be set on
                the targeted property.  Note that the property value is
                ignored and SHOULD be set to an empty quoted rstring
                (DQUOTE DQUOTE).
              </t>
              <t hangText="Format Definition:">
                This property is defined by the following notation:
                <figure><artwork name="abnf">
setparam  = "SETPARAMETER *(";" other-param) ":" text CRLF
                </artwork></figure>
              </t>
              <t hangText="Example:">
                The following is an example of this property:
                <figure><artwork name="example">
SETPARAMETER;PARTSTAT=NEEDS-ACTION;RSVP=TRUE:""
                </artwork></figure>
              </t>
            </list>
          </t>
        </section>
      </section> <!-- Action Properties -->
    </section> <!-- Extensions -->

    <section title="Additional Considerations">
      <section title="Handling Default Properties and Parameters"
               anchor="defaults">
        <t></t>
      </section>

      <section title="Handling Recurrences" anchor="recurrences">
        <t>Recurring events in iCalendar are defined by the "RRULE",
        "RDATE", and "EXDATE" properties in a "master" iCalendar
        component. Those rules produce a set of "generated"
        instances. In some cases specific "generated" instances are
        changed, resulting in the presence of "overridden"
        components, which are identified by having the same "UID"
        property value as the "master" component, and a
        "RECURRENCE-ID" property whose value matches the start time
        of the corresponding "generated" instance.</t>

        <t>Patch commands can be used to implicitly create
        "overridden" components in the targeted iCalendar object by
        specifying a path that targets the "generated" instance's
        start time, i.e., what would be the "RECURRENCE-ID" value in
        the "overridden" component.</t>

        <t>Note that if the value of a "RECURRENCE-ID" match item in
        a path does not correspond to an existing instance (either
        because its value does not match a "generated" instance, or
        its value matches an "EXDATE" in the "master" component),
        then the patch operation MUST fail.</t>
        <t>For example, consider the following daily recurring event:
        <figure><artwork>
BEGIN:VCALENDAR
PRODID:test
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T120000Z
DURATION:PT1H
SUMMARY:Master component
RRULE:FREQ=DAILY
END:VEVENT
END:VCALENDAR
        </artwork></figure>
        The following patch command could be used to update the
        "SUMMARY" property value of the second instance of the
        recurring event (note that the first line of the patch
        command has been split across two lines to fit within the
        margins of this document):
        <figure><artwork>
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT[UID=1234][RID=20150903T120000Z]#
SUMMARY:Override second instance
END:UPDATE
END:VPATCH
        </artwork></figure>
        which results in the following updated iCalendar component:
        <figure><artwork>
BEGIN:VCALENDAR
PRODID:test
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T120000Z
DURATION:PT1H
SUMMARY:Master component
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VEVENT
UID:1234
RECURRENCE-ID=20150903T120000Z
DTSTART:20150903T120000Z
DURATION:PT1H
SUMMARY:Override second instance
END:VEVENT
END:VCALENDAR
        </artwork></figure>
        A similar result could have been achieved by using a
        "create" action, a path targeting the "VCALENDAR"
        component, and the "overridden" component supplied as the
        data item. However, the implicit override behaviour allows
        for a more compact representation of this type of change.
        </t>

        <t>Note that there is no equivalent behavior when it comes
        to removing "overridden" components from an iCalendar object
        to cancel the instance. In that case, two patch commands are
        required: one to delete the "overridden" component, and one
        to create an "EXDATE" property value to cover the
        cancellation. So, continuing from the example data
        immediately above, the following patch commands would cancel
        the instance that was previously overridden:
        <figure><artwork>
BEGIN:VPATCH
BEGIN:DELETE            
TARGET:/VCALENDAR/VEVENT[UID=1234][RID=20150903T120000Z]
END:DELETE
BEGIN:CREATE
TARGET:/VCALENDAR/VEVENT[UID=1234][RID=M]
EXDATE:20150903T120000Z
END:CREATE
END:VPATCH
        </artwork></figure>
        which results in the following updated iCalendar component:
        <figure><artwork>
BEGIN:VCALENDAR
PRODID:test
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T120000Z
DURATION:PT1H
SUMMARY:Master component
RRULE:FREQ=DAILY
EXDATE:20150903T120000Z
END:VEVENT
END:VCALENDAR
        </artwork></figure>
        </t>
      </section>
      <section title="Folded lines" anchor="folding">
        <t>iCalendar data can contain "folded" lines (as described
        in Section 3.1 of <xref target="RFC5545" />). The patch
        operations described in this specification are a
        "semantic" rather than "syntactic" update to the
        data. i.e., they apply to the underlying object model as
        opposed to the "raw" iCalendar text data. As such, folded
        lines in the iCalendar data targeted by the patch commands
        are not significant. Any iCalendar data supplied as data
        items in a patch command MAY contain folded lines.</t>
      </section>

      <section title="Encoding" anchor="encoding">
        <t>Text values in iCalendar use a backslash escape
        mechanism for certain characters (as described in Section
        3.3.11 <xref target="RFC5545" />). Patch operations apply
        to the escaped form of the iCalendar data. For example, to
        target a "DESCRIPTION" property that contains an encoded
        line feed character:
        <figure><artwork>
DESCRIPTION:Line one\nLine two
        </artwork></figure>
        the following TARGET property would be used:
        <figure><artwork>
TARGET:/VCALENDAR/VEVENT#DESCRIPTION[=Line one\nLine two]
        </artwork></figure>
        Similarly, to update the "DESCRIPTION" property, the
        following patch command could be used:
        <figure><artwork>
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT#DESCRIPTION
DESCRIPTION:Line one\nLine two\nLine three
END:UPDATE
END:VPATCH
        </artwork></figure>
        </t>
      </section>
    </section>

    <section title='Use with iTIP'>
      <t><xref target="RFC5546">iTIP</xref> defines how iCalendar data
      can be sent between calendar user agents to schedule calendar
      components between calendar users. This specification does not
      define how iCalendar patch documents can be used with iTIP.</t>
    </section>

    <section title='Use with CalDAV and HTTP'>
      <t>The <xref target="RFC4791">CalDAV</xref> calendar access
      protocol allows clients and servers to exchange iCalendar
      data. iCalendar data is typically stored in calendar object
      resources on a CalDAV server. A CalDAV client typically updates
      the calendar object resource data via an HTTP PUT request, which
      requires sending the entire iCalendar object in the HTTP request
      body.</t>

      <t>A server can also support the HTTP <xref
      target="RFC5789">PATCH method</xref> which allows a patch
      document to be specified in the request body, and for that patch
      document to be applied to the resource targeted by the HTTP
      request. In this case, the server would advertise the
      "text/calendar" media type in an "Apply-Patch" header as
      described in Section 3.1 of <xref target="RFC5789"/>.</t>

      <t>Note that the CREATE sub-component defined by this
      specification does not allow targeting the entire iCalendar
      object, and hence an HTTP PATCH request cannot be used to create
      a new resource (a normal HTTP PUT request is used instead).</t>
    </section>

    <section title='Security Considerations' anchor='security'>
      <t>This specification does not introduce any addition security
      concerns beyond those described in <xref target="RFC5545" />,
      <xref target="RFC5789" />, and <xref target="RFC4791" />.</t>
    </section>

    <section title='Privacy Considerations' anchor='privacy'>
      <t>This specification does not introduce any addition privacy
      concerns beyond those described in <xref target="RFC5545" />,
      <xref target="RFC5789" />, and <xref target="RFC4791" />.</t>
    </section>

    <section title='IANA Considerations'>
      <section title='Component Registrations'>
        <t>This document defines the following new iCalendar
        components to be added to the registry defined in Section
        8.3.1 of <xref target='RFC5545'/>:</t>
      <texttable>
        <ttcol>Component</ttcol>
        <ttcol>Status</ttcol>
        <ttcol>Reference</ttcol>
        <c>VPATCH</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="vpatch"/></c>
        <c>CREATE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="create"/></c>
        <c>UPDATE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="update"/></c>
        <c>DELETE</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="delete"/></c>
      </texttable>
      </section>

      <section title='Property Registrations'>
        <t>This document defines the following new iCalendar
        properties to be added to the registry defined in Section
        8.3.2 of <xref target='RFC5545'/>:</t>
      <texttable>
        <ttcol>Property</ttcol>
        <ttcol>Status</ttcol>
        <ttcol>Reference</ttcol>
        <c>PATCH-VERSION</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="patchversion"/></c>
        <c>PATCH-ORDER</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="patchorder"/></c>
        <c>TARGET</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="targetprop"/></c>
        <c>SETPARAMETER</c>
        <c>Current</c>
        <c>RFCXXXX, <xref target="setparam"/></c>
      </texttable>
      </section>
    </section>

    <section title='Acknowledgments'>
      <t>Thanks to the following for feedback:
      </t>
      <t>
        This specification originated from work at the Calendaring and
        Scheduling Consortium, which has helped with the development
        and testing of implementations.
      </t>
    </section>
  </middle>

  <back>
    <references title='Normative References'>
    &rfc2119;
    &rfc4791;
    &rfc5234;
    &rfc5545;
    &rfc5546;
    &rfc5789;
    &rfc7953;
    </references>

<!--
    <references title='Informative References'>
    </references>
-->
    
<!--
    <section
      title="Change History (To be removed by RFC Editor before publication)">
      <t>Changes in draft-daboo-icalendar-vpatch-01: 
      <list style='numbers'>
        <t></t>
      </list>
      </t>
    </section>
-->

    <section title="VPATCH Examples">
      <t>Examples of single command patch documents for common
      iCalendar data operations.</t>

      <section title="Add a new component">
        <t>Creates a new "VEVENT" component.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:CREATE
TARGET:/VCALENDAR
BEGIN:VEVENT
UID:1234
DTSTART:20150902T103000Z
DURATION:PT1H
SUMMARY:Test event
END:VEVENT
END:CREATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Add a new VALARM component">
        <t>Creates a new "VALARM" component in the "VEVENT" component
        with the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:CREATE
TARGET:/VCALENDAR/VEVENT[UID=1234]
BEGIN:VALARM
UID:4567
ACTION:DISPLAY
TRIGGER:-PT30M
DESCRIPTION:Time to leave
END:VALARM
END:CREATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Replace a component">
        <t>Replace the "VEVENT" component with the "UID" property
        value "1234" with a new component.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT[UID=1234]
BEGIN:VEVENT
UID:1234
DTSTART:20150903T123000Z
DURATION:PT2H
SUMMARY:Changed event
END:VEVENT
END:UPDATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Remove a component">
        <t>Remove the "VEVENT" component with the "UID" property value
        "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:DELETE
TARGET:/VCALENDAR/VEVENT[UID=1234]
END:DELETE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Add properties to a component">
        <t>Add "STATUS" and "COMPLETED" properties to the "VTODO"
        component with the "UID" property value "4321".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:CREATE
TARGET:/VCALENDAR/VTODO[UID=4321]
STATUS:COMPLETED
COMPLETED:20150902T224515Z
END:CREATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Update properties in a component">
        <t>Update the "SUMMARY" and "LOCATION" properties in the
        "VEVENT" component with the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT[UID=1234]#
SUMMARY:Title was changed
LOCATION:New place
END:UPDATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Update a targeted property in a component">
        <t>Update the "ATTENDEE" property with value
        "mailto:cyrus@example.com" in the "VEVENT" component with the
        "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT[UID=1234]#ATTENDEE[=mailto:cyrus@example.com]
ATTENDEE;PARTSTAT=ACCEPTED:mailto:cyrus@example.com
END:UPDATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Remove a property from a component">
        <t>Remove the "URL" property from the "VEVENT" component with
        the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:DELETE
TARGET:/VCALENDAR/VEVENT[UID=1234]#URL
END:DELETE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Remove a property with a specific value from a component">
        <t>Remove the "ATTENDEE" property with the value
        "mailto:cyrus@example.com" in the "VEVENT" component with the
        "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:DELETE
TARGET:/VCALENDAR/VEVENT[UID=1234]#ATTENDEE[=mailto:cyrus@example.com]
END:DELETE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Change a parameter on a property with a specific
                      value from a component"> 
        <t>Change or add the "PARTSTAT" parameter on the "ATTENDEE"
        property with the value "mailto:cyrus@example.com" in the
        "VEVENT" component with the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT[UID=1234]#ATTENDEE[=mailto:cyrus@example.com]
SETPARAMETER;PARTSTAT=ACCEPTED:""
END:UPDATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Remove a parameter on a property with a specific
                      value from a component"> 
        <t>Remove the "PARTSTAT" parameter from the "ATTENDEE"
        property with the value "mailto:cyrus@example.com" in the
        "VEVENT" component with the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:DELETE
TARGET:/VCALENDAR/VEVENT[UID=1234]#ATTENDEE[=mailto:cyrus@example.com];PARTSTAT
END:UPDATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>
<!--
      <section title="Add a value to a multi-valued property in a component">
        <t>Add a new value to the "EXDATE" property in the "VEVENT"
        component with the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
TARGET:/VCALENDAR/VEVENT[UID=1234]
VALUECREATE:EXDATE:20150903T120000Z
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Remove a value from a multi-valued property from a component">
        <t>Remove a value from the "EXDATE" property in the "VEVENT"
        component with the "UID" property value "1234".</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
TARGET:/VCALENDAR/VEVENT[UID=1234]
VALUEDELETE:EXDATE:20150903T120000Z
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>
-->
      <section title="Attendee updating their participation status">
        <t>When an attendee updates their participation status in an
        event, they will typically: update the "PARTSTAT" parameter on
        their "ATTENDEE" property, remove the "RSVP" parameter on
        their "ATTENDEE" property, update the "TRANSP" property in the
        "VEVENT" component. This set of changes is shown below as a
        series of patch commands, with the attendee having the
        calendar user address "mailto:cyrus@example.com". The commands
        target all "VEVENT" components in the iCalendar object being
        changed.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VPATCH
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com];
SETPARAMETER;PARTSTAT=ACCEPTED:TRUE
END:UPDATE
BEGIN:DELETE
TARGET:/VCALENDAR/VEVENT#ATTENDEE[=mailto:cyrus@example.com];RSVP
END:DELETE
BEGIN:UPDATE
TARGET:/VCALENDAR/VEVENT#
TRANSP:OPAQUE
END:UPDATE
END:VPATCH
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>
    </section>
<!--
    <section title="Recurrence Examples">
      <t>Examples of recurring events using a patch to represent
      recurrence overrides.</t>
      <section title="Daily with one override">
        <t>A daily recurring "VEVENT" component with the "SUMMARY"
        property overridden for the second instance.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T103000Z
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
END:VEVENT
BEGIN:VINSTANCE
UID:1234
RECURRENCE-ID:20150903T103000Z
BEGIN:PROPERTYUPDATE
SUMMARY:Test event
END:PROPERTYUPDATE
END:VINSTANCE
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Daily with one alarm override">
        <t>A daily recurring "VEVENT" component with a different alarm
        for the second instance.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T103000Z
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
BEGIN:VALARM
UID:4567
ACTION:DISPLAY
TRIGGER:-PT30M
DESCRIPTION:30 minutes before meeting
END:VALARM
END:VEVENT
BEGIN:VINSTANCE
UID:1234
RECURRENCE-ID:20150903T103000Z
TARGET:VALARM[UID=4567]
BEGIN:COMPONENTUPDATE
BEGIN:VALARM
UID:4567
ACTION:DISPLAY
TRIGGER:-PT10M
DESCRIPTION:10 minutes before meeting
END:VALARM
END:COMPONENTUPDATE
END:VINSTANCE
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Daily with two overrides due to Attendee status differences">
        <t>A daily recurring "VEVENT" component with various
        "ATTENDEE" properties overridden for the second and third
        instances, reflecting different attendees' ability to
        participate. In this case, the attendee "mike@example.com" has
        declined the second instance only, and the attendee
        "dave@example.com" has declined the third instance only.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T103000Z
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
ORGANIZER:mailto:cyrus@example.com
ATTENDEE;PARTSTAT=ACCEPTED:mailto:cyrus@example.com
ATTENDEE;PARTSTAT=ACCEPTED:mailto:mike@example.com
ATTENDEE;PARTSTAT=ACCEPTED:mailto:dave@example.com
END:VEVENT
BEGIN:VINSTANCE
UID:1234
RECURRENCE-ID:20150903T103000Z
BEGIN:PROPERTYUPDATE
ATTENDEE;PARTSTAT=DECLINED:mailto:mike@example.com
END:PROPERTYUPDATE
END:VINSTANCE
BEGIN:VINSTANCE
UID:1234
RECURRENCE-ID:20150904T103000Z
BEGIN:PROPERTYUPDATE
ATTENDEE;PARTSTAT=DECLINED:mailto:dave@example.com
END:PROPERTYUPDATE
END:VINSTANCE
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>

      <section title="Daily with two overrides due to Attendee additions and removals">
        <t>A daily recurring "VEVENT" component with various
        "ATTENDEE" properties added or removed from the second and
        third instances, reflecting different attendees' ability to
        participate. In this case, the attendee "ken@example.com" has
        been added to the second instance only, and the attendee
        "dave@example.com" has been removed from the third instance
        only.</t>
        <t><figure>
              <artwork><![CDATA[
BEGIN:VCALENDAR
PRODID:Example
VERSION:2.0
BEGIN:VEVENT
UID:1234
DTSTART:20150902T103000Z
DURATION:PT1H
SUMMARY:Test event
RRULE:FREQ=DAILY
ORGANIZER:mailto:cyrus@example.com
ATTENDEE;PARTSTAT=ACCEPTED:mailto:cyrus@example.com
ATTENDEE;PARTSTAT=ACCEPTED:mailto:mike@example.com
ATTENDEE;PARTSTAT=ACCEPTED:mailto:dave@example.com
END:VEVENT
BEGIN:VINSTANCE
UID:1234
RECURRENCE-ID:20150903T103000Z
BEGIN:PROPERTYCREATE
ATTENDEE;PARTSTAT=ACCEPTED:mailto:ken@example.com
END:PROPERTYCREATE
END:VINSTANCE
BEGIN:VINSTANCE
UID:1234
RECURRENCE-ID:20150904T103000Z
BEGIN:PROPERTYDELETE
ATTENDEE:mailto:dave@example.com
END:PROPERTYDELETE
END:VINSTANCE
END:VCALENDAR
]]></artwork>
            </figure></t>
      </section>
-->
  </back>
</rfc>
